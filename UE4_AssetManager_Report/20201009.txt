■UE4におけるアセットシステムについて
UE4では「プライマリーアセット」と「セカンダリーアセット」という概念がある。

　●プライマリーアセット
　　　アセットマネージャーを介して直接操作が可能なアセット。
　　　プライマリーアセットIDを指定することで、エンジン側に必要なアセットの読み込みを開始させることができる。
　●セカンダリーアセット
　　　アセットマネージャーで指定することはなく、プライマリーアセットに紐づくアセットとして自動的に読み込まれるアセット。


■アセットマネージャーに指定のアセットを管理させるには
2通りの方法が存在する。

　●アセットマネージャーの設定から指定する場合
　　　プロジェクト設定->アセットマネージャー　の「スキャンするプライマリアセットタイプ」にて、
　　　新しい項目を作成し、各パラメータを設定する。
　　　主な項目は以下。

　　・Primary Asset Type
　　　　管理用のタグ、グループ名。
　　・Asset Base Class
　　　　管理対象にしたいアセットの基底クラス。その派生クラスも対象となる。
　　・Directories
　　　　ここで指定したフォルダ以下にあり、且つAssetBaseClassで指定したクラスに基づくアセットが管理対象となる。
　　・Specific Assets
　　　　Directoriesのアセット直指定版。

　●Primary Asset Labelとして登録する場合
　　　コンテンツブラウザで右クリック->その他->データアセット->Primary Asset Labelを選択。
　　　作成されたプライマリーデータアセットを開き、各パラメータを設定する。
　　　主な項目は以下。

　　・Priority
　　　　参照されるアセットに管理を割り当てる場合、優先度の高いプライマリーアセットが優先度の低いプライマリーアセットよりも優先される。
　　　　優先順位が一致する場合、両方が同じセカンダリアセットを管理します。
　　・Chunk ID
　　　　この値が負の場合、Chunk 0としてパッケージ化される。Chunk 0はゲームの基本データと共に配布されるデフォルトのチャンク。
　　　　DLCなどの追加コンテンツを用意する場合、この値を設定して別パッケージ化する。
　　・Cook Rule
　　　　パッケージに含めたい場合は「Always Cook」で設定。
　　　　ただし製品用パッケージに含めたくないデバッグ用アセットなどは「Development Always Cook」などを指定する。
　　・Label Assets in My Directory 
　　　　Primary Asset Labelが配置されているフォルダとそのサブフォルダに格納されているアセットに対して、設定したRulesを適用
　　・Is Runtime Label 
　　　　非同期ロードの際は必ずON。
　　・Explicit Assets
    　　個別にアセットをSecondary Assetに登録する。
　　・Explicit Blueprints
    　　個別にBlueprintをSecondary Assetに登録する。