■自前のアセットマネージャークラスを作成してみる
class TESTASSETMANAGER_API UMyAssetManager : public UAssetManager
{
	GENERATED_BODY()
	
public:
	/// <summary>
	///　コンストラクタ
	/// </summary>
	UMyAssetManager() {}

	/// <summary>
	/// 初期ロード開始時
	/// </summary>
	virtual void StartInitialLoading() override;

	/// <summary>
	/// アイテムタイプ定義
	/// </summary>
	static const FPrimaryAssetType WeaponItemType;
	static const FPrimaryAssetType ArmorItemType;


	// アセットマネージャオブジェクトの取得
	static UMyAssetManager& GetObj();
};

MyAssetManager.cppにて以下を定義
const FPrimaryAssetType UMyAssetManager::WeaponItemType = TEXT("WeaponItem");
const FPrimaryAssetType UMyAssetManager::ArmorItemType = TEXT("ArmorItem");


■自作したアセットマネージャークラスにて定義したプライマリデータアセットのタイプを設定に追加するには
[プロジェクト設定] -> [ゲーム] -> [Asset Manager] -> [Primary Asset Type to Scan] にて、
Primary Asset Typeに上記で定義した名前を追加

■アセットマネージャーの指定を作成した自前の物に差し替えるには
Configフォルダにある DefaultEngine.iniに以下の設定を追加する

[/Script/Engine.Engine]
AssetManagerClassName=/Script/[プロジェクト名].[作成したアセットマネージャークラス名]