■今回はUnity中心でやってきた状態からUE4を触った時の躓いた点、また未解決な点を自分用として残しておく

・VisualStudioを用いてのソースコードの反映
　Unityでは変更を加えた後保存すればすぐに反映されたが、UE4でVisualStudioを使う場合、一度ソースコードのビルドをかける必要がある。
　これに気付かず相当な時間を調査に費やしたため、忘れないようにする。
　自分が知らないだけで何か設定等を弄ればビルドは不要になる可能性もあるので、時間があれば調査する。


・VisualStudioのインテリジェンス機能の遅さ
　こちらは未解決。Unityで使っていた場合とは明らかに反応速度に差があった。
　UE4は空プロジェクトでも相当な容量があるので、その辺りが原因で遅くなっている…？
　作業効率に影響が出るので、早めに原因を突き止めたい所。


・UE4独特のコーディング規約
　色々存在するが、自分が最初に当たったのは列挙型の取り扱い。
　詳細は省くが普通のC++と同じように宣言しても正常に動作しない。
　また、UObjectというクラスを継承した物でないとGC対象に含まれないなど、把握しておかないと思わぬ不具合を起こす物もある。


・クラスの追加/削除
　追加は簡単にできるが、削除が少し面倒。Unityに慣れていると少々戸惑う。
　まずエディタとVisualStudioを終了させた状態にして、エクスプローラー、もしくはVCSソフト(SourceTreeなど)でファイルを削除。
　次にUE4のプロジェクトファイル(.uproject)を右クリックし、「Generate Visual Studio project files」を実行。
　VSプロジェクトを起動して、ビルドをかける。ここまで手順を踏むとエディタから削除したクラスが認識されなくなる。
　Unityでは簡単に削除ができるので気軽にクラスの追加をしてしまうが、UE4では意識を変えて作業する必要がある。